{
    "openapi": "3.0.0",
    "info": {
        "title": "My REST API",
        "description": "This is the OpenAPI documentation for my Laravel REST API project.",
        "contact": {
            "name": "Mantas",
            "email": "mantas@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of all brands",
                "operationId": "130f2bd423b6fe2355253e2c39878d99",
                "responses": {
                    "200": {
                        "description": "List of brands",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "283de011874bd2a1ada6efafb676e83f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a specific brand by ID",
                "operationId": "2086e16f9b1a70aea714677ef42808a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update an existing brand",
                "operationId": "40baf1fc4e11f1ccc369eb0b36b56f54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a brand by ID",
                "operationId": "b3f38ad7a979e5c78ac4e95ceb640c7e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Brand deleted successfully (no content)"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            }
        },
        "/api/car-models": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get list of all car models",
                "operationId": "e3b490883632ae064d1de5ddac65cc7e",
                "responses": {
                    "200": {
                        "description": "List of car models",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CarModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Create a new car model",
                "operationId": "3484efe17cc38d2cbf85e61aaaee781a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarModelCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car model created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/brands/{brandId}/car-models": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get car models for a specific brand",
                "operationId": "63632475888a5d706e372e61f4e25525",
                "parameters": [
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "ID of the brand",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of car models belonging to the brand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CarModel"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            }
        },
        "/api/car-models/{id}": {
            "get": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Get details of a specific car model",
                "operationId": "64a838d8b35a648d96ece48c74a9d740",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car model ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car model details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Update an existing car model",
                "operationId": "2efbf1d7d195e91cd151e6395fab76b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car model ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarModelUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car model updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car model not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car Models"
                ],
                "summary": "Delete a car model by ID",
                "operationId": "891983dc0d18b7d798f7ca2459643ab8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car model ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Car model deleted successfully"
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            }
        },
        "/api/listings/{listingId}/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get comments by listing",
                "operationId": "edcf98a4eaf2ccd99fcf3fa1e6c5b36e",
                "parameters": [
                    {
                        "name": "listingId",
                        "in": "path",
                        "description": "Listing ID to fetch comments for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments"
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            }
        },
        "/api/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get all comments",
                "operationId": "2e2597016871fa5dd2bdfccf912edc41",
                "responses": {
                    "200": {
                        "description": "List of comments"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "operationId": "c6ce2c222c8502aadd6a287105e49307",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "listing_id",
                                    "content"
                                ],
                                "properties": {
                                    "listing_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Great listing!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/comments/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get comment details",
                "operationId": "dfbfe62d6ea6efe5a6ebc2be766a00e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment details"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update an existing comment",
                "operationId": "17f16fb86b3722d33c54e6d165a02c80",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated comment text"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "operationId": "b683c30a239aa780ffc7e9b219e90811",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/listings": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get all approved listings",
                "operationId": "626511cff52fa1165beca4b7480a66c8",
                "responses": {
                    "200": {
                        "description": "List of approved listings"
                    }
                }
            },
            "post": {
                "tags": [
                    "Listings"
                ],
                "summary": "Create a new listing",
                "operationId": "f232854be0ba1c4e83eeda78909de489",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "car_model_id",
                                    "title",
                                    "description",
                                    "price",
                                    "mileage",
                                    "color"
                                ],
                                "properties": {
                                    "car_model_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "2016 Toyota Corolla"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Well-maintained, low mileage car."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8500
                                    },
                                    "mileage": {
                                        "type": "integer",
                                        "example": 120000
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Red"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Listing created successfully"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/car-models/{modelId}/listings": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listings by car model",
                "operationId": "dc61de9f18bf5c713a0d6afdfba56c9e",
                "parameters": [
                    {
                        "name": "modelId",
                        "in": "path",
                        "description": "Car model ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of listings for the given model"
                    },
                    "404": {
                        "description": "Car model not found"
                    }
                }
            }
        },
        "/api/listings/{id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listing details (with comments)",
                "operationId": "3d6056b16aecf7f8e24443d7e69f9e1e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listing details with related data"
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Listings"
                ],
                "summary": "Update listing (owner only)",
                "operationId": "f0c3d97b00edab2226ce3a2e80b3c060",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated car title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "example": 9500
                                    },
                                    "mileage": {
                                        "type": "integer",
                                        "example": 130000
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Blue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Listing updated successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Listing not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Listings"
                ],
                "summary": "Delete listing",
                "operationId": "9f2ef5353184b7ca889c8e4d150cc093",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Listing deleted successfully"
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            }
        },
        "/api/listings/{id}/approve": {
            "patch": {
                "tags": [
                    "Listings"
                ],
                "summary": "Approve listing (admin only)",
                "operationId": "db70ce06dfebe5f03cb2bd12dd8474a0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listing approved successfully"
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            }
        },
        "/api/listings/{id}/reject": {
            "patch": {
                "tags": [
                    "Listings"
                ],
                "summary": "Reject listing (admin only)",
                "operationId": "0696d64ccee64568c8a92c1ba18cc0af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "admin_comment": {
                                        "type": "string",
                                        "example": "Listing rejected due to incomplete info"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Listing rejected successfully"
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Nike"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sportswear brand"
                    }
                },
                "type": "object"
            },
            "BrandCreateRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Adidas"
                    },
                    "description": {
                        "type": "string",
                        "example": "German sports company"
                    }
                },
                "type": "object"
            },
            "BrandUpdateRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Adidas Updated"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated brand description"
                    }
                },
                "type": "object"
            },
            "CarModel": {
                "title": "CarModel",
                "description": "Represents a car model",
                "required": [
                    "id",
                    "brand_id",
                    "name",
                    "year"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2018
                    },
                    "description": {
                        "type": "string",
                        "example": "Reliable and fuel-efficient sedan"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:45:00Z"
                    }
                },
                "type": "object"
            },
            "CarModelCreateRequest": {
                "title": "CarModelCreateRequest",
                "description": "Request body for creating a CarModel",
                "required": [
                    "brand_id",
                    "name",
                    "year"
                ],
                "properties": {
                    "brand_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2018
                    },
                    "description": {
                        "type": "string",
                        "example": "Reliable and fuel-efficient sedan"
                    }
                },
                "type": "object"
            },
            "CarModelUpdateRequest": {
                "title": "CarModelUpdateRequest",
                "description": "Request body for updating a CarModel",
                "required": [
                    "brand_id",
                    "name",
                    "year"
                ],
                "properties": {
                    "brand_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2018
                    },
                    "description": {
                        "type": "string",
                        "example": "Reliable and fuel-efficient sedan"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "description": "User comment on a listing",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "listing_id": {
                        "type": "integer",
                        "example": 12
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a great listing!"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:45:00Z"
                    }
                },
                "type": "object"
            },
            "Listing": {
                "title": "Listing",
                "description": "A listing containing products or services",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Used Toyota Corolla 2018"
                    },
                    "description": {
                        "type": "string",
                        "example": "A reliable car in great condition."
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 8500
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-14T12:45:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Brands",
            "description": "API endpoints for managing brands"
        },
        {
            "name": "Car Models",
            "description": "API endpoints for managing car models"
        },
        {
            "name": "Comments",
            "description": "Comments"
        },
        {
            "name": "Listings",
            "description": "Listings"
        }
    ]
}